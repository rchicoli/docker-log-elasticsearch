language: go
go:
  - 1.9.2

services:
  - docker

sudo: required

before_install:
  # - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  # - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  # - sudo apt-get update
  # - sudo apt-get -y install docker-ce
  - echo

# cache:
#   directories:
#     - ${TRAVIS_BUILD_DIR}/vendor/github.com
#     - ${TRAVIS_BUILD_DIR}/vendor/golang.org
#     - ${TRAVIS_BUILD_DIR}/vendor/gopkg.in

script:
  - go test -v ./... || exit 1
  - sudo make || exit 1
  # - sudo make integration_tests || exit 1
  # - sudo make acceptance_tests || exit 1
  # - sudo env BATS_TESTFILE=01-integration.bats make suite_tests || exit 1
  # - sudo env BATS_TESTFILE=02-acceptance.bats make suite_tests || exit 1
  - sudo env SLEEP_TIME=10 ./scripts/basht.sh --test-dir tests/integration-tests
  - sudo env SLEEP_TIME=10 ./scripts/basht.sh --test-dir tests/acceptance-tests

stages:
  # - name: cache
  #   if: branch = development
  - name: build
    if: branch = development
  - name: release
    if: branch = master

matrix:
  include:
    # - stage: cache
    #   if: type IN (pull_request)
    #   script:
    #     - go get -v github.com/kardianos/govendor
    #     - go install github.com/kardianos/govendor
    #     - govendor sync +external

    - stage: build
      if: type IN (pull_request)
      env: CLIENT_VERSION=1

    - env: CLIENT_VERSION=2
      if: type IN (pull_request)

    - env: CLIENT_VERSION=5
      if: type IN (pull_request)

    - env: CLIENT_VERSION=6
      if: type IN (pull_request)

    - stage: release
      # env: MAJOR_RELEASE=true
      # it would be nice to map github labels instead
      # env: RELEASE_TAG=0.3.0
      if: type IN (push)
      script:
        - ./scripts/git-release.sh
      deploy:
        provider: releases
        api_key: $GITHUB_TOKEN
        on:
          branch: master

after_install:
  - docker plugin ls

# BUG: docker-ce version 17.09.0~ce-0~debian
# it overloads docker-plugin by sending lots of empty lines
# addons:
#   apt:
#     packages:
#       - docker-ce=17.05.0~ce-0~ubuntu-trusty